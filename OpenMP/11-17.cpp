// 11. Вычисление числа ln 2

#include <stdio.h>
#include <math.h>
#include <omp.h>

int main()
{
    int n = 1000000; // Количество итераций
    double ln2 = 0.0;

    omp_set_num_threads(6); //указываем количество потоков, на которые будем делить иттерации 

    //для ln2 (переменная private) в каждой иттерации создаются локальные переменные, 
    // затем значения, полученные в потоках суммируются и запоминаются в исходной переменной 
    // (исходную переменную в конкретный момент может изменять только один поток), чтобы избежать гонки потоков
    #pragma omp parallel for reduction(+ : ln2) 
    for (int i = 1; i <= n; i++)
    {
        //дополнительная переменная для вычисления значения числителя
        double term = (i % 2 == 0) ? -1.0 : 1.0; 
        ln2 += term / i;
    }

    printf("Value of ln 2: %lf\n", ln2);

    return 0;
}
